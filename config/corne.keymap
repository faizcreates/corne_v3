/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Cut {
            bindings = <&kp LG(X)>;
            key-positions = <13 14>;
        };

        Copy {
            bindings = <&kp LG(C)>;
            key-positions = <15 16>;
        };

        Paste {
            bindings = <&kp LG(V)>;
            key-positions = <19 20>;
        };

        PurePaste {
            bindings = <&kp LC(V)>;
            key-positions = <21 22>;
        };

        Alfred {
            bindings = <&kp LG(SPACE)>;
            key-positions = <17 18>;
        };

        Clipboard {
            bindings = <&kp LG(LS(V))>;
            key-positions = <16 19>;
        };

        SelectAll {
            bindings = <&kp LG(A)>;
            key-positions = <15 20>;
        };

        ColorPicker {
            bindings = <&kp LG(LS(J))>;
            key-positions = <14 21>;
        };

        LeftDesktop {
            bindings = <&kp LC(LEFT)>;
            key-positions = <13 16>;
        };

        RightDesktop {
            bindings = <&kp LC(RIGHT)>;
            key-positions = <19 22>;
        };

        LeftTab {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <13 15>;
        };

        RightTab {
            bindings = <&kp LC(TAB)>;
            key-positions = <20 22>;
        };

        LeftApp {
            bindings = <&kp LG(TAB)>;
            key-positions = <16 14>;
        };

        RightApp {
            bindings = <&kp LG(TAB)>;
            key-positions = <19 21>;
        };

        TextSniper {
            bindings = <&kp LG(LS(NUMBER_2))>;
            key-positions = <14 15>;
        };

        LassoScreenshot {
            bindings = <&kp LG(LS(NUMBER_4))>;
            key-positions = <20 21>;
        };

        Undo {
            bindings = <&kp LG(Z)>;
            key-positions = <16 17>;
        };

        Redo {
            bindings = <&kp LG(LS(Z))>;
            key-positions = <18 19>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <25 26>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        LockMac {
            bindings = <&kp LG(L)>;
            key-positions = <29 30>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <31 32>;
        };

        CapsLock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q             &kp W               &kp E           &kp R                &kp T              &kp Y        &kp U           &kp I           &kp O               &kp P                     &none
&none  &mt LEFT_SHIFT A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_GUI F       &kp G              &kp H        &mt LEFT_GUI J  &mt LEFT_ALT K  &mt LEFT_CONTROL L  &mt LEFT_SHIFT SEMICOLON  &none
&none  &kp Z             &kp X               &kp C           &kp V                &kp B              &kp N        &kp M           &kp COMMA       &kp DOT             &kp FSLH                  &none
                                             &kp LC(LEFT)    &lt 2 LA(BACKSPACE)  &lt 1 BACKSPACE    &lt 1 SPACE  &lt 2 ENTER     &kp LC(RIGHT)
            >;
        };

        layer1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp HOME       &kp PAGE_UP    &kp PAGE_DOWN  &kp END              &kp C_VOLUME_UP    &kp ASTERISK  &kp N7        &kp N8         &kp N9        &kp N0     &none
&none  &kp UP_ARROW   &kp LEFT       &kp RIGHT      &kp DOWN             &kp K_MUTE         &kp PLUS      &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp MINUS  &none
&none  &kp LG(EQUAL)  &kp LG(MINUS)  &kp LG(N0)     &kp LA(NUMBER_2)     &kp C_VOL_DN       &kp SLASH     &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp EQUAL  &none
                                     &kp LC(LEFT)   &lt 2 LA(BACKSPACE)  &lt 1 BACKSPACE    &lt 1 SPACE   &lt 2 ENTER   &kp LC(RIGHT)
            >;
        };

        layer2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp GRAVE         &kp TILDE          &kp UNDERSCORE  &kp NON_US_BACKSLASH  &none              &none        &kp AMPS         &kp ASTRK      &kp LPAR   &kp RPAR           &none
&none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &none              &none        &kp DOLLAR       &kp PERCENT    &kp CARET  &kp DOUBLE_QUOTES  &none
&none  &kp PIPE          &kp MINUS          &kp LA(MINUS)   &kp LA(LS(MINUS))     &none              &none        &kp EXCLAMATION  &kp AT_SIGN    &kp HASH   &kp SQT            &none
                                            &kp LC(LEFT)    &lt 2 LA(BACKSPACE)   &lt 1 BACKSPACE    &lt 1 SPACE  &lt 2 ENTER      &kp LC(RIGHT)
            >;
        };
    };
};
